#tostart print use macros:
#PRINT_WARMUP EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
#PRINT_START EXTRUDER=[first_layer_temperature] BED=[first_layer_bed_temperature] FILAMENT=[filament_type] MESHbed="NONE" ADAPTIVEBED=2

[include heatsoak.cfg]

[gcode_macro PRINT_WARMUP]
description: Perform initial homing and heating tasks
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(190) | float %}
    {% set BED_TEMP = params.BED_TEMP | default(60) | float %}

    # Homing, QGL, pre-warming print nozzle etc.
    status_heating
    #SET_SERVO SERVO=bed_temp_servo ANGLE=100
    M104 S{EXTRUDER_TEMP * 0.75}        # set extruder temperature to 75%
    #M140 S{BED_TEMP}                    # set bed temperature
    G32                                 # home printer
    # wait for the print bed to reach thermal equilibrium
    HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor Bed_Top' SOAK_TEMP={BED_TEMP * 0.85}  RATE=0.25 TEMP_SMOOTH=6 RATE_SMOOTH=30
    #SET_SERVO SERVO=bed_temp_servo ANGLE=0

[gcode_macro M106]
rename_existing: M106.1
gcode:
  {% if params.P is defined and params.P|int > 0 %}
    {% if params.P|int == 1 %}
      M106.1 S{params.S|int}
    {% endif %}
    {% if params.P|int == 2 %}
      SET_FAN_SPEED FAN=exhaust_fan SPEED={(params.S|int / 255 )}
    {% endif %}
    {% if params.P|int == 3 %}
      SET_FAN_SPEED FAN=Air_Scrubber SPEED={(params.S|int / 255 )}
    {% endif %}
  {% else %}
    M106.1 S{params.S|int}
  {% endif %}

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=_BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=_BEEPER_pin VALUE=0

[gcode_macro M600]
gcode:
  PAUSE
  M117 Colour Change Macro
  Change_FILAMENT_UNLOAD
  M117 Load new Filament
  PLAY_TONE l=5

[gcode_macro M601]
gcode:
  PAUSE
  M117 Printer Paused
  PLAY_TONE l=5

[gcode_macro Rescan_Bed]
gcode:
  G28
  bed_mesh_calibrate                 # Starts bed mesh
  BED_MESH_PROFILE SAVE="400custom"  # save ther mesh
  SAVE_CONFIG

#[gcode_macro G28]
# Only home if needed.
#rename_existing: G28.1
#gcode:
#  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
#    {% if printer.toolhead.homed_axes != "xyz" %}
#      {% if home_all or 'X' in params %}
#       G28.1 X
#      {% endif %}
  
#      {% if home_all or 'Y' in params %}
#       G28.1 Y
#      {% endif %}
  
#      {% if home_all or 'Z' in params %}
#       G28.1 Z
#      {% endif %}
#    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
variable_unloading_speed_start: 80     # Fast here to seperate the filament from meltzone (Very intitial retract SS uses distance of E-15)
variable_unloading_speed: 20           # Too fast forms excessively long tip or hair. Slow is better here UNLOADING_SPEED_START/COOLING_MOVES seems a good start
variable_cooling_tube_position: 35     # Dragon ST: 35, Dragon HF: 30, Mosquito: 30, Revo: 35, Phaetus Rapido HF: 43;  Measured from Top of Heater Block to Top of Heatsink
variable_cooling_tube_length: 10       # Dragon ST: 15, Dragon HF: 10, Mosquito: 20, Revo: 10, Phaetus Rapido HF: 22; Measured from Nozzle to Top of Heater Block
variable_initial_cooling_speed: 10     # Slow to solidify tip and cool string if formed.
variable_final_cooling_speed: 50       # High speed break the string formed. Too fast = tip deformation during eject. Too Slow = long string/no seperation
variable_cooling_moves: 4              # 2-4 is a good start
gcode:
  {% set UNLOADING_SPEED_START = params.UNLOADING_SPEED_START|default(printer['gcode_macro UNLOAD_FILAMENT_FORM_TIP']['unloading_speed_start']) %}
  {% set UNLOADING_SPEED = params.UNLOADING_SPEED|default(printer['gcode_macro UNLOAD_FILAMENT_FORM_TIP']['unloading_speed']) %}
  {% set COOLING_TUBE_LENGTH = params.COOLING_TUBE_LENGTH|default(printer['gcode_macro UNLOAD_FILAMENT_FORM_TIP']['cooling_tube_length']) %}
  {% set COOLING_TUBE_POSITION = params.COOLING_TUBE_POSITION|default(printer['gcode_macro UNLOAD_FILAMENT_FORM_TIP']['cooling_tube_position']) %}
  {% set INITIAL_COOLING_SPEED = params.INITIAL_COOLING_SPEED|default(printer['gcode_macro UNLOAD_FILAMENT_FORM_TIP']['initial_cooling_speed']) %}
  {% set FINAL_COOLING_SPEED = params.FINAL_COOLING_SPEED|default(printer['gcode_macro UNLOAD_FILAMENT_FORM_TIP']['final_cooling_speed']) %}
  {% set COOLING_MOVES = params.COOLING_MOVES|default(printer['gcode_macro UNLOAD_FILAMENT_FORM_TIP']['cooling_moves']) %}
  SAVE_GCODE_STATE NAME=load_state
  M117 Heating-
  M104 S205 ; start heating
  G28
  M109 S210 ; wait till hot
  M117 Unloading...
  M83                            ; set extruder to relative
  G1 X105 Y0 Z80                ; move to servicing position
  SET_PRESSURE_ADVANCE ADVANCE=0
  {% set TOTAL_RETRACTION_DISTANCE = COOLING_TUBE_POSITION|float + COOLING_TUBE_LENGTH|float / 2 - 15 %}
  G1 E-15 F{1.0 * UNLOADING_SPEED_START|float * 60} # Default value from SS - Cannot modify
  G1 E-{0.7 * TOTAL_RETRACTION_DISTANCE} F{1.0 * UNLOADING_SPEED|float * 60}
  G1 E-{0.2 * TOTAL_RETRACTION_DISTANCE} F{0.5 * UNLOADING_SPEED|float * 60}
  G1 E-{0.1 * TOTAL_RETRACTION_DISTANCE} F{0.3 * UNLOADING_SPEED|float * 60}
  {% set SPEED_INC = (FINAL_COOLING_SPEED|float - INITIAL_COOLING_SPEED|float) / (2 * COOLING_MOVES|float - 1) %}
  {% for move in range(COOLING_MOVES|int) %}
      G1 E{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*move*2) * 60}
      G1 E-{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*(move*2+1)) * 60}
  {% endfor %}
  G1 E-300 F3000
  G1 E-300 F3000
  G1 E-100 F1000 #slower as it pushes out the extruder
  M82  
  M117 Sucess!
  RESTORE_GCODE_STATE NAME=load_state MOVE=1

[delayed_gcode POWER_ON_PRINTER]
initial_duration: 1
gcode:
  PLAY_TONE l=1

[gcode_macro PLAY_TONE]
gcode:
     {% set l = params.L|default(0)|int %}

   {% if l == 1 %} ; play first tone #Here we go
     M300 P184 S392
     M300 P184 S523
     M300 P187 S659
     M300 P417 S784
     M300 P139 S659
     M300 P400 S784  

   {% elif l == 2 %} #play second tone #Mario Death
     M300 P146 S494
     M300 P97 S698
     M300 P157 S0
     M300 P132 S698
     M300 P174 S698
     M300 P168 S659
     M300 P176 S587
     M300 P134 S523
     M300 P95 S330
     M300 P31 S0
   
  {% elif l == 3 %} #play second tone #MarioWorld start theme
    M300 P100 S659
    M300 P200 S659
    M300 P99 S659
    M300 P101 S0
    M300 P100 S523
    M300 P99 S659
    M300 P101 S0
    M300 P199 S784
    M300 P201 S0
    M300 P199 S392
   {% elif l == 4 %} #play third tone #Ode to joy
    M300 P353 S330
    M300 P353 S330
    M300 P353 S349
    M300 P353 S392
    M300 P353 S392
    M300 P353 S349
    M300 P353 S330
    M300 P353 S294
    M300 P353 S262
    M300 P353 S262
    M300 P353 S294
    M300 P353 S330
    M300 P529 S330
    M300 P176 S294
    M300 P706 S294
   {% else %}
     M300 P100 S0 #play nothing
   {% endif %}

#[gcode_button BESTOP]
#pin: rpi:gpio16
#press_gcode:
#release_gcode:
#   { action_emergency_stop() }
 
#[gcode_button BPAUSE]
#pin: rpi:gpio6
#press_gcode:
#release_gcode:
#   { PAUSE }
 
#[gcode_button BRESUME]
#pin: rpi:gpio12
#press_gcode:
#release_gcode:
#   { RESUME }

[gcode_macro END_PRINT]
gcode:
  # safe anti-stringing move coords
  {% set th = printer.toolhead %}
  {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
  {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
  {% set z_safe = [th.position.z + 50, th.axis_maximum.z]|min %}
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-5.0 F1800                 ; retract filament
	TURN_OFF_HEATERS
  G90                                      ; absolute positioning
  G0 X{x_safe} Y{y_safe} Z{z_safe} F30000  ; move nozzle to remove stringing
  #G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F3600  ; park nozzle at rear
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y} F30000  ; park nozzle at rear
	BED_MESH_CLEAR
  RESTORE_GCODE_STATE NAME=STATE_PRINT_END
  #set_led led=Printer_rgb red=0 green=0 blue=0    
  SET_LED LED=case_light WHITE=0.25
  UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
  PLAY_TONE l=2

[gcode_macro PRINT_WARMUP]
description: Perform initial homing and heating tasks
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(190) | float %}
    {% set BED_TEMP = params.BED_TEMP | default(60) | float %}

    # Homing, QGL, pre-warming print nozzle etc.
    M104 S{EXTRUDER_TEMP * 0.75}        # set extruder temperature to 75%
    M140 S{BED_TEMP}                    # set bed temperature
    G32                                 # home printer

    # wait for the print bed to reach thermal equilibrium
    HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor top_bed' SOAK_TEMP={BED_TEMP * 0.80}
    #HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor chamber' SOAK_TEMP={BED_TEMP * 0.80} RATE=0.1 RATE_SMOOTH=30

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set fct = {'ASA': 30, 'ABS': 50, 'NYLON': 35, 'PLA': 0, 'PC': 50, 'PETG': 30 } %}
  {% set ADAPTIVE_bed = params.ADAPTIVEBED|default("2")|int %}
  {% set MESH_bed = params.MESHbed|default("NONE") %}
  {% set skipheatsoak = params.skipheatsoak|default("0") %}
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("0")|int %}
  {% set filament = params.filament|default("NONE") %}
  {% if filament != 'NONE' %}                                                        
    {% set target_chamber = fct[filament] %}
  {% endif %}  
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  #    SFS_ENABLE
  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
    ##  Uncomment if you have a Nevermore/BentoBox/BentoBox mini.
    SET_FAN_SPEED FAN=Air_Scrubber SPEED=1

    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}
    {% if skipheatsoak == 0 %}
      HEAT_SOAK HEATER='heater_bed' TARGET={target_bed} SOAKER='temperature_sensor top_bed' SOAK_TEMP={target_bed * 0.80}
    {% endif %}
  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"          # Displays info
  M104 S{target_extruder}

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  #SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  #STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  #quad_gantry_level               # Levels the buildplate via QGL
  #G28 Z                           # Homes Z again after QGL

  ##  Uncomment for bed mesh (2 of 2)
  {% if ADAPTIVE_bed == 99 %}
    {% if MESH_bed != "NONE" %}
      BED_MESH_CLEAR
      STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
      SET_DISPLAY_TEXT MSG="Loading Mesh {MESH_bed}"    # Displays info
      BED_MESH_PROFILE LOAD="{MESH_bed}"
    {% endif %}
  {% else %}
    BED_MESH_CLEAR
    SET_DISPLAY_TEXT MSG="Adaptive Bed mesh"    # Displays info
    STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
    bed_mesh_calibrate ADAPTIVE=1 ADAPTIVE_MARGIN={ADAPTIVE_bed}
  {% endif %}

  #SET_DISPLAY_TEXT MSG="Adaptive Bed mesh"    # Displays info
  #STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  #bed_mesh_calibrate ADAPTIVE=1 ADAPTIVE_MARGIN=5                 # Starts adaptive bed mesh

  ## load default mesh
  #BED_MESH_PROFILE LOAD="400custom"

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp
  SET_LED LED=case_light WHITE=1
  
  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  PLAY_TONE l=3
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 X0 Y1 F10000                      # Moves to starting point
  G0 Z0.3                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X150 E35 F1000                                # Purge line
  G90                                              # Absolut position


[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  M117 Heating+
  M104 S205 ; start heating
  HOME
  M109 S205 ; wait till hot
  M117 Unloading...
  M83           ; set extruder to relative
  #G1 E20 F500   ; slow load
  G1 E200 F3000
  G1 E200 F3000
  G1 E250 F3000
  G1 E20 F120 ; prime nozzle with filament
#  G1 E15 F150   ; prime nozzle with filament
  G1 E-5        ;retract
  M82
  RESTORE_GCODE_STATE NAME=unload_state MOVE=1

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS 1 second after klipper starts
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_ENABLE] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
    M117 ENABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1 ; Put your filament sensor's name after SENSOR=    

[gcode_macro SFS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor 
gcode:
    M117 DISABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=
