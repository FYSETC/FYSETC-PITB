[mcu PITB]
canbus_uuid: XXXXXXXXXXXX

[stepper_x]
step_pin:PITB:gpio6
dir_pin:!PITB:gpio5
enable_pin:!PITB:gpio20
#endstop_pin:^!PITB:gpio16
endstop_pin: tmc5160_stepper_x:virtual_endstop
homing_retract_dist: 20
rotation_distance: 40
position_endstop: 0
position_max: 209
homing_speed: 150.0
second_homing_speed: 10.0
microsteps: 32

[tmc5160 stepper_x]
cs_pin:PITB:gpio1
spi_software_sclk_pin:PITB:gpio2
spi_software_mosi_pin:PITB:gpio3
spi_software_miso_pin:PITB:gpio4
diag1_pin:!PITB:gpio7
driver_SGT: -64  # -64 is most sensitive value, 63 is least sensitive
#stealthchop_threshold: 999999
interpolate: False
run_current: 1.1

[stepper_y]
step_pin:PITB:gpio13
dir_pin:PITB:gpio23
enable_pin:!PITB:gpio22
#endstop_pin:^!PITB:gpio17
endstop_pin: tmc5160_stepper_y:virtual_endstop
homing_retract_dist: 20
rotation_distance: 40
position_endstop: 210
position_max: 210
homing_speed: 150.0
second_homing_speed: 10.0
microsteps: 32
 
[tmc5160 stepper_y]
cs_pin:PITB:gpio21
spi_software_sclk_pin:PITB:gpio2
spi_software_mosi_pin:PITB:gpio3
spi_software_miso_pin:PITB:gpio4
diag1_pin:!PITB:gpio14
driver_SGT: -64  # -64 is most sensitive value, 63 is least sensitive
#stealthchop_threshold: 999999
interpolate: False
run_current: 1.1

[fan_generic PITB_FAN0]
pin:PITB:gpio0
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10

[fan_generic PITB_FAN1]
pin:PITB:gpio18
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10

[neopixel PITB_LED]
pin:PITB:gpio19
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

[temperature_sensor pitb_mcu]
sensor_type = temperature_mcu
sensor_mcu = PITB

#[temperature_sensor PITB_TEMP0]
#sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin:PITB:gpio26
#min_temp: -50
#max_temp: 300

#[temperature_sensor PITB_TEMP1]
#sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin:PITB:gpio27
#min_temp: -50
#max_temp: 300

#[temperature_sensor PITB_TEMP2]
#sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin:PITB:gpio28
#min_temp: -50
#max_temp: 300

#example klipper_5160
#[tmc5160 stepper_x]
#cs_pin:
#   The pin corresponding to the TMC5160 chip select line. This pin
#   will be set to low at the start of SPI messages and raised to high
#   after the message completes. This parameter must be provided.
#spi_speed:
#spi_bus:
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   See the "common SPI settings" section for a description of the
#   above parameters.
#chain_position:
#chain_length:
#   These parameters configure an SPI daisy chain. The two parameters
#   define the stepper position in the chain and the total chain length.
#   Position 1 corresponds to the stepper that connects to the MOSI signal.
#   The default is to not use an SPI daisy chain.
#interpolate: True
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). The default is True.
#run_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
#sense_resistor: 0.075
#   The resistance (in ohms) of the motor sense resistor. The default
#   is 0.075 ohms.
#stealthchop_threshold: 0
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.
#coolstep_threshold:
#   The velocity (in mm/s) to set the TMC driver internal "CoolStep"
#   threshold to. If set, the coolstep feature will be enabled when
#   the stepper motor velocity is near or above this value. Important
#   - if coolstep_threshold is set and "sensorless homing" is used,
#   then one must ensure that the homing speed is above the coolstep
#   threshold! The default is to not enable the coolstep feature.
#high_velocity_threshold:
#   The velocity (in mm/s) to set the TMC driver internal "high
#   velocity" threshold (THIGH) to. This is typically used to disable
#   the "CoolStep" feature at high speeds. The default is to not set a
#   TMC "high velocity" threshold.
#driver_MSLUT0: 2863314260
#driver_MSLUT1: 1251300522
#driver_MSLUT2: 608774441
#driver_MSLUT3: 269500962
#driver_MSLUT4: 4227858431
#driver_MSLUT5: 3048961917
#driver_MSLUT6: 1227445590
#driver_MSLUT7: 4211234
#driver_W0: 2
#driver_W1: 1
#driver_W2: 1
#driver_W3: 1
#driver_X1: 128
#driver_X2: 255
#driver_X3: 255
#driver_START_SIN: 0
#driver_START_SIN90: 247
#   These fields control the Microstep Table registers directly. The optimal
#   wave table is specific to each motor and might vary with current. An
#   optimal configuration will have minimal print artifacts caused by
#   non-linear stepper movement. The values specified above are the default
#   values used by the driver. The value must be specified as a decimal integer
#   (hex form is not supported). In order to compute the wave table fields,
#   see the tmc2130 "Calculation Sheet" from the Trinamic website.
#driver_MULTISTEP_FILT: True
#driver_IHOLDDELAY: 6
#driver_TPOWERDOWN: 10
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 2
#driver_HSTRT: 5
#driver_FD3: 0
#driver_TPFD: 4
#driver_CHM: 0
#driver_VHIGHFS: 0
#driver_VHIGHCHM: 0
#driver_DISS2G: 0
#driver_DISS2VS: 0
#driver_PWM_AUTOSCALE: True
#driver_PWM_AUTOGRAD: True
#driver_PWM_FREQ: 0
#driver_FREEWHEEL: 0
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 30
#driver_PWM_REG: 4
#driver_PWM_LIM: 12
#driver_SGT: 0
#driver_SEMIN: 0
#driver_SEUP: 0
#driver_SEMAX: 0
#driver_SEDN: 0
#driver_SEIMIN: 0
#driver_SFILT: 0
#driver_DRVSTRENGTH: 0
#driver_BBMCLKS: 4
#driver_BBMTIME: 0
#driver_FILT_ISENSE: 0
#   Set the given register during the configuration of the TMC5160
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#diag0_pin:
#diag1_pin:
#   The micro-controller pin attached to one of the DIAG lines of the
#   TMC5160 chip. Only a single diag pin should be specified. The pin
#   is "active low" and is thus normally prefaced with "^!". Setting
#   this creates a "tmc5160_stepper_x:virtual_endstop" virtual pin
#   which may be used as the stepper's endstop_pin. Doing this enables
#   "sensorless homing". (Be sure to also set driver_SGT to an
#   appropriate sensitivity value.) The default is to not enable
#   sensorless homing.

